name: Push trigger an Azure Machine Learning job

on:
  push:
    branches: [main]

jobs:
  train:
    runs-on: ubuntu-latest
    environment: Dev
    env:
      ENVIRONMENT: ${{vars.ENVIRONMENT}}

    steps:
      - name: Show Enviroment var env
        run: echo "Environment is $ENVIRONMENT "
      - name: Show Enviroment vars.ENVIRONMENT
        run: echo "Environment is ${{ vars.ENVIRONMENT }}"
      - name: Check out repo
        uses: actions/checkout@main
      - name: Install az ml extension
        run: az extension add -n ml -y
      - name: Azure login
        uses: azure/login@v1
        with:
          creds: ${{secrets.AZURE_CREDENTIALS}}
      - name: Trigger Azure Machine Learning job
        run: az ml job create --file src/job.yml --resource-group ${{ vars.RESOURCE_GROUP }} --workspace-name ${{ vars.WORKSPACE }} -s
        #run: exit 1 #Force an error
      - name: Failed Job
        if: ${{failure()}}
        run: echo "Job Failed"

  prod-train:
    needs: train
    runs-on: ubuntu-latest
    environment: Prod
    env:
      ENVIRONMENT: ${{vars.ENVIRONMENT}}

    steps:
      - name: Show Enviroment var env
        run: echo "Environment is $ENVIRONMENT "
      - name: Show Enviroment vars.ENVIRONMENT
        run: echo "Environment is ${{ vars.ENVIRONMENT }}"
      - name: Check out repo
        uses: actions/checkout@main
      - name: Install az ml extension
        run: az extension add -n ml -y
      - name: Azure login
        uses: azure/login@v1
        with:
          creds: ${{secrets.AZURE_CREDENTIALS}}
      - name: Trigger Azure Machine Learning job
        run: az ml job create --file src/job-prod.yml --resource-group ${{ vars.RESOURCE_GROUP }} --workspace-name ${{ vars.WORKSPACE }} -s
        #run: exit 1 #Force an error

  create-endpoint:
    needs: prod-train
    runs-on: ubuntu-latest
    environment: Prod
    env:
      ENVIRONMENT: ${{vars.ENVIRONMENT}}

    steps:
      - name: Show Enviroment var env
        run: echo "Environment is $ENVIRONMENT "
      - name: Show Enviroment vars.ENVIRONMENT
        run: echo "Environment is ${{ vars.ENVIRONMENT }}"
      - name: Check out repo
        uses: actions/checkout@main
      - name: Install az ml extension
        run: az extension add -n ml -y
      - name: Azure login
        uses: azure/login@v1
        with:
          creds: ${{secrets.AZURE_CREDENTIALS}}
      - name: Create End Point
        run: az ml online-endpoint create -f 20-RegisterModel/CreateEndPoint.yml --resource-group ${{ vars.RESOURCE_GROUP }} --workspace-name ${{ vars.WORKSPACE }}
      - name: Register model
        run: az ml model create --name diabetes-prod --path azureml://jobs/diabetes-prod/outputs/artifacts/paths/outputs --type mlflow_model
        #az ml model create --name diabetes-prod --version 1 --path azureml://jobs/blue_chin_3rgry5c6lt/outputs/model --type mlflow_model -g rg-mlops-challenge  -w mlw-mlops-challenge
        #az ml model create --name diabetes-prod --version 1 --path runds:/blue_chin_3rgry5c6lt/model --type mlflow_model -g rg-mlops-challenge  -w mlw-mlops-challenge
        #az ml model create --name diabetes-prod --path runs:/diabetes-prod/model --type mlflow_model -g rg-mlops-challenge  -w mlw-mlops-challenge
        #az ml job list --query "sort_by([?experiment_name=='diabetes-prod'].{Name:name,Jobstatus:status,Experiment:experiment_name,Created:creation_context.created_at}, &Created) | [-1]" -g rg-mlops-challenge  -w mlw-mlops-challenge -oTable

